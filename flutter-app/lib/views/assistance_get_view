import 'package:flutter/material.dart';
import 'package:http/http.dart' as http;
import 'dart:convert';
import 'package:firebase_auth/firebase_auth.dart';
import 'package:isibappmoodle/config/config';
import 'package:isibappmoodle/reutilisable/app_drawer.dart';
import 'package:isibappmoodle/views/assistance_details_view';




class AssistanceRequestsPage extends StatefulWidget {
  @override
  _AssistanceRequestsPageState createState() => _AssistanceRequestsPageState();
}

class _AssistanceRequestsPageState extends State<AssistanceRequestsPage> {
  List<Map<String, dynamic>> _demandes = [];
  bool _isLoading = true;

  @override
  void initState() {
    super.initState();
    _fetchDemandes();
  }

  Future<void> _fetchDemandes() async {
    final currentUser = FirebaseAuth.instance.currentUser;
    if (currentUser == null) return;

    try {
      final response = await http.get(
        Uri.parse('${Config.sander}/assistance/${currentUser.uid}'),
      );

      if (response.statusCode == 200) {
        final data = json.decode(response.body);
        setState(() {
          _demandes = List<Map<String, dynamic>>.from(data);
          _isLoading = false;
        });
      }
    } catch (e) {
      print('Erreur: $e');
      setState(() => _isLoading = false);
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Demandes d\'assistance reçues'),
      ),
      drawer: AppDrawer(),
      body: _isLoading
          ? Center(child: CircularProgressIndicator())
          : _demandes.isEmpty
              ? Center(child: Text('Aucune demande reçue'))
              : ListView.builder(
                  itemCount: _demandes.length,
                  itemBuilder: (context, index) {
                    final demande = _demandes[index];
                    return Card(
                      margin: EdgeInsets.all(8),
                      child: ListTile(
                        title: Text('${demande['matiere']}'),
                        onTap: () {
                          Navigator.push(
                            context,
                            MaterialPageRoute(
                              builder: (context) => AssistanceDetailsPage(demande: demande),
                            ),
                          );
                        },
                        subtitle: Column(
                          crossAxisAlignment: CrossAxisAlignment.start,
                          children: [
                            Text('De: ${demande['demandeurEmail'] ?? 'Non spécifié'}'),
                            Text('Classe: ${demande['demandeurClasse'] ?? 'Non spécifié'}'),
                            Text('Filière: ${demande['demandeurFiliere'] ?? 'Non spécifié'}'),
                            Text('Date: ${demande['date']}'),
                            Text('Durée: ${demande['heures']} heures'),
                            Text('Lieu: ${demande['lieu']}'),
                            Text('Description: ${demande['description']}'),
                            Text('Status: ${demande['status']}',
                              style: TextStyle(
                                fontWeight: FontWeight.bold,
                                color: demande['status'] == 'en attente' 
                                  ? Colors.orange 
                                  : demande['status'] == 'accepté' 
                                    ? Colors.green 
                                    : Colors.red
                              ),
                            ),
                          ],
                        ),
                        isThreeLine: true,
                      ),
                    );
                  },
                ),
    );
  }
}